"0","# extract mapping table data from articleNode"
"0","parseMapping <- function(articleNode, baseIdx)"
"0","{"
"0","  tmp_df <- data.frame(a2a_id = integer(),"
"0","                       ar_id = integer(),"
"0","                       au_id = integer(),"
"0","                       stringsAsFactors = F)"
"0","  "
"0","  ar_id <- as.integer(xmlAttrs(articleNode)[[1]]) "
"0","  # iterate authors"
"0","  authors <- xpathSApply(articleNode, "".//Author"")"
"0","  for(i in 1 : length(authors)){"
"0","    last_name <- xpathSApply(authors[[i]], "".//LastName"", xmlValue)"
"0","    first_name <- xpathSApply(authors[[i]], "".//ForeName"", xmlValue)"
"0","    initials <- xpathSApply(authors[[i]], "".//Initials"", xmlValue)"
"0","    suffix <- xpathSApply(authors[[i]], "".//Suffix"", xmlValue)"
"0","    # handle non-exist fields"
"0","    if(length(last_name) == 0){"
"0","      last_name <- ""unknown"""
"0","    }"
"0","    if(length(first_name) == 0){"
"0","      first_name <- ""unknown"""
"0","    }"
"0","    if(length(initials) == 0){"
"0","      initials <- ""unknown"""
"0","    }"
"0","    if(length(suffix) == 0){"
"0","      suffix <- ""unknown"""
"0","    }"
"0","    "
"0","    # get the au_id "
"0","    au_id <- checkAuthor(last_name, first_name, initials, suffix)"
"0","    # check if current article contains duplicated author"
"0","    row_index <- which(tmp_df$ar_id == ar_id & tmp_df$au_id == au_id)"
"0","    # new mapping"
"0","    if(length(row_index) == 0){"
"0","      new_mapping <- data.frame(a2a_id = as.integer(nrow(tmp_df) + baseIdx), ar_id, au_id, stringsAsFactors = F)"
"0","      # combine two data frames"
"0","      tmp_df <- rbind(tmp_df, new_mapping)"
"0","    }"
"0","  }"
"0","  "
"0","  # return updated data frame"
"0","  return(tmp_df)"
"0","}"
"0",""
